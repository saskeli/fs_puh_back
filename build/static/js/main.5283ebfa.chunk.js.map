{"version":3,"sources":["services/people.js","app.js","index.js"],"names":["baseUrl","people","axios","get","then","response","data","person","post","id","delete","concat","np","put","deller","p","setter","plist","noteSetter","errorSetter","window","confirm","name","setTimeout","catch","error","filter","o","Persons","_ref","fString","react_default","a","createElement","toLowerCase","f","includes","map","key","number","onClick","PFilter","_ref2","value","onChange","PForm","_ref3","naChange","nuChange","onSubmit","type","Notification","_ref4","message","nClass","className","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","notificationString","setNotification","_useState11","_useState12","isError","setError","useEffect","app_Notification","app_PFilter","event","target","app_PForm","preventDefault","find","objectSpread","updatedPerson","pm","app_Persons","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.5283ebfa.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = 'http://localhost:3001/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n        .then(response => response.data)\n}\n\nconst postNew = (person) => {\n    return axios.post(baseUrl, person)\n        .then(response => response.data)\n}\n\nconst removePerson = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n        .then(response => response.data)\n}\n\nconst updateNumber = (id, np) => {\n    return axios.put(`${baseUrl}/${id}`, np)\n        .then(response => response.data)\n}\n\nexport default {\n    getAll, \n    postNew,\n    removePerson,\n    updateNumber\n}","import React, { useState, useEffect } from 'react';\nimport people from \"./services/people\"\nimport './index.css'\n\nconst deller = (p, setter, plist, noteSetter, errorSetter) => () => {\n    if (!window.confirm(`Poistetaanko ${p.name}?`)) {\n        return\n    }\n    people.removePerson(p.id)\n        .then(() => {\n            errorSetter(false)\n            noteSetter(`${p.name} poistettiin!`)\n            setTimeout(() => {\n                noteSetter(null)\n            }, 5000)\n        })\n        .catch(error => {\n            errorSetter(true)\n            noteSetter(`${p.name} poisto epäonnistui!`)\n            setTimeout(() => {\n                noteSetter(null)\n            }, 5000)\n        })\n    setter(plist.filter(o => o.id !== p.id))\n}\n\nconst Persons = ({plist, fString, setter, noteSetter, errorSetter}) => (\n    <table><tbody>\n        {\n            plist.filter(p => {\n                const name = p.name.toLowerCase()\n                const f = fString.toLowerCase()\n                return name.includes(f)\n            }).map(p => \n                <tr key={p.id}>\n                    <td>{p.name}</td>\n                    <td>{p.number}</td>\n                    <td> <button onClick={deller(p, setter, plist, noteSetter, errorSetter)}>poista</button></td>\n                </tr>)\n        }\n    </tbody></table>\n)\n\nconst PFilter = ({value, onChange}) => (\n    <form>\n        <div>\n            rajaa näytettäviä <input value={value} onChange={onChange}/>\n        </div>\n    </form>\n)\n\nconst PForm = ({name, naChange, number, nuChange, onSubmit}) => (\n    <form onSubmit={onSubmit}>\n        <div>\n            nimi: <input value={name} onChange={naChange}/>\n        </div>\n        <div>\n            numero: <input value={number} onChange={nuChange}/>\n        </div>\n        <div>\n            <button type=\"submit\">lisää</button>\n        </div>\n    </form>\n)\n\nconst Notification = ({ message, nClass }) => {\n    if (message === null) {\n        return null\n    }\n  \n    return (\n        <div className={nClass}>\n            {message}\n        </div>\n    )\n}\n\nconst App = () => {\n    const [ persons, setPersons] = useState([]) \n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState(\"\")\n    const [ fString, setFilter ] = useState(\"\")\n    const [ notificationString, setNotification ] = useState(null)\n    const [ isError, setError ] = useState(false)\n\n    useEffect(() => {\n        people.getAll()\n            .then(plist => setPersons(plist))\n            .catch(error => {\n                setError(true)\n                setNotification(\"Henkilöiden hakeminen epäonnistui!\")\n                setTimeout(() => {\n                    setNotification(null)\n                }, 5000)\n            })\n    }, [])\n\n    const handleNameChange = event => setNewName(event.target.value)\n    const handleNumberChange = event => setNewNumber(event.target.value)\n    const handleFilterChange = event => setFilter(event.target.value)\n\n    const addPerson = event => {\n        event.preventDefault()\n        const p = persons.find(p => p.name === newName)\n        if (p) {\n            if (window.confirm(`${newName} on jo olemassa! Päivitetäänkö numero?`)) {\n                const np = {...p, number: newNumber}\n                people.updateNumber(p.id, np)\n                    .then(updatedPerson => {\n                        setError(false)\n                        setNotification(`${newName} numero päivitetty!`)\n                        setTimeout(() => {\n                            setNotification(null)\n                        })\n                        setPersons(persons.map(pm => pm.id === p.id ? updatedPerson : pm))\n                    })\n                    .catch(error => {\n                        setError(true)\n                        setNotification(`${newName} numero päivitetty!`)\n                        setPersons(persons.filter(pm => pm.id !== p.id))\n                        setTimeout(() => {\n                            setNotification(null)\n                        }, 5000)\n                    })\n            }            \n        }\n        else {\n            const person = {\n                name: newName,\n                number: newNumber\n            }\n            people.postNew(person)\n                .then(person => {\n                    setPersons(persons.concat(person))\n                    setError(false)\n                    setNotification(`${person.name} lisätty!`)\n                    setTimeout(() => {\n                        setNotification(null)\n                    }, 5000)\n                })\n                .catch(error => {\n                    setError(true)\n                    setNotification(`Lisäys epäonnistui!`)\n                    setTimeout(() => {\n                        setNotification(null)\n                    }, 5000)\n            })\n        }\n    }\n\n    return (\n        <div>\n            {isError ? <Notification message={notificationString} nClass=\"error\" /> : null}\n            <h2>Puhelinluettelo</h2>\n            {!isError ? <Notification message={notificationString} nClass=\"notification\"/> : null}\n            <PFilter value={fString} onChange={handleFilterChange}/>\n            <h3>Lisää uusi</h3>\n            <PForm \n                name={newName} naChange={handleNameChange}\n                number={newNumber} nuChange={handleNumberChange}\n                onSubmit={addPerson}\n            />\n            <h3>Numerot</h3>\n            <Persons plist={persons} fString={fString} setter={setPersons} \n                     noteSetter={setNotification} errorSetter={setError} />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}